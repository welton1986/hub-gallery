#pragma checksum "E:\GitHub\dopster-ub-gallery\Dopster-Hub-Gallery.UI\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "283658b2bc1d93aa20bb2c93ee14e45191238177"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Dopster_Hub_Gallery.UI.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace Dopster_Hub_Gallery.UI.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\GitHub\dopster-ub-gallery\Dopster-Hub-Gallery.UI\Pages\_ViewImports.cshtml"
using Dopster_Hub_Gallery.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"283658b2bc1d93aa20bb2c93ee14e45191238177", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"910f142d19cde5f9b334e696d7daa94973d9c5f8", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/infinityscroll/infinityscroll.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "E:\GitHub\dopster-ub-gallery\Dopster-Hub-Gallery.UI\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div class=\"container mt-4\">\r\n\r\n\r\n");
            WriteLiteral(@"
    <!--
        <div class=""row"">
            <div class=""col-md-4"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Card title</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn ""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
            <div class=""col-md-4"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
     ");
            WriteLiteral(@"               <div class=""card-body"">
                        <h5 class=""card-title"">Card title</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn  mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    -->



    <div id=""myBtnContainer"">
        <button class=""btn active"" onclick=""filterSelection('all')""> Todos</button>
        <button class=""btn"" onclick=""filterSelection('vue')""> Vue</button>
        <button class=""btn"" onclick=""filterSelection('react')""> React</button>
        <button class=""btn"" onclick=""filterSelection('angular')""> Angular</button>
    </div>


    <!-- Portf");
            WriteLiteral(@"olio Gallery Grid -->
    <div class=""row"">
        <div class=""column col-md-4 vue"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Vue</h5><!--Card title-->
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>
        <div class=""column col-md-4 vue"">
            <div class=""content"">
                <div class=""card"" style=""wi");
            WriteLiteral(@"dth: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Vue</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>
        <div class=""column col-md-4 react"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h");
            WriteLiteral(@"5 class=""card-title"">React</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>

        <div class=""column col-md-4 react"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">React</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick exa");
            WriteLiteral(@"mple text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>
        <div class=""column col-md-4 react"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">React</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a");
            WriteLiteral(@">
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>
        <div class=""column col-md-4 angular"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Angular</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </d");
            WriteLiteral(@"iv>

        <div class=""column col-md-4 angular"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Angular</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>

        <div class=""column col-md-4 angular"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img sr");
            WriteLiteral(@"c=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Angular</h5>
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>

        <div class=""column col-md-4 angular"">
            <div class=""content"">
                <div class=""card"" style=""width: 18rem;"">
                    <img src=""https://i.imgur.com/ZTkt4I5.jpg"" class=""card-img-top"" alt=""..."">
                    <div class=""card-body"">
                        <h5 class=""card-title"">Angular</h5>");
            WriteLiteral(@"
                        <h6 class=""card-subtitle mb-2 text-muted"">Card subtitle</h6>
                        <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <a href=""#"" class=""btn mr-2""><i class=""fas fa-link""></i> Visit Site</a>
                        <a href=""#"" class=""btn""><i class=""fab fa-github""></i> Github</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- END GRID -->
    </div>



    <style>
        #myBtnContainer {
            text-align: center;
        }
        /* Center website */
        .row {
            margin: 8px -16px;
        }

        /* Add padding BETWEEN each column (if you want)
            .row,
            .row > .column {
                padding: 8px;
            }

        /* Create three equal columns that floats next to each other  */
        .column {
            float: left;
            width: 10");
            WriteLiteral(@"0%;
            display: none; /* Hide columns by default */
        }

        /* Clear floats after rows   */
        .row:after {
            content: """";
            display: table;
            clear: both;
        }

        /* Content */
        .content {
            padding: 10px;
        }

        /* The ""show"" class is added to the filtered elements */
        .show {
            display: block;
        }

        /* Style the buttons */
        .corpo .btn {
            border: none;
            outline: none;
            padding: 12px 16px;
            background-color: white;
            cursor: pointer;
        }

            /* Add a grey background color on mouse-over */
            .corpo .btn:hover {
                background-color: #dedede;
            }

            /* Add a dark background color to the active button */
            .corpo .btn.active {
                background-color: #0505a3;
                color: white;
            }
    </styl");
            WriteLiteral(@"e>



    <script>
        filterSelection(""all"") // Execute the function and show all columns
        function filterSelection(c) {
            var x, i;
            x = document.getElementsByClassName(""column"");
            if (c == ""all"") c = """";
            // Add the ""show"" class (display:block) to the filtered elements, and remove the ""show"" class from the elements that are not selected
            for (i = 0; i < x.length; i++) {
                w3RemoveClass(x[i], ""show"");
                if (x[i].className.indexOf(c) > -1) w3AddClass(x[i], ""show"");
            }
        }

        // Show filtered elements
        function w3AddClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split("" "");
            arr2 = name.split("" "");
            for (i = 0; i < arr2.length; i++) {
                if (arr1.indexOf(arr2[i]) == -1) {
                    element.className += "" "" + arr2[i];
                }
            }
        }

        // Hi");
            WriteLiteral(@"de elements that are not selected
        function w3RemoveClass(element, name) {
            var i, arr1, arr2;
            arr1 = element.className.split("" "");
            arr2 = name.split("" "");
            for (i = 0; i < arr2.length; i++) {
                while (arr1.indexOf(arr2[i]) > -1) {
                    arr1.splice(arr1.indexOf(arr2[i]), 1);
                }
            }
            element.className = arr1.join("" "");
        }

        // Add active class to the current button (highlight it)
        var btnContainer = document.getElementById(""myBtnContainer"");
        var btns = btnContainer.getElementsByClassName(""btn"");
        for (var i = 0; i < btns.length; i++) {
            btns[i].addEventListener(""click"", function () {
                var current = document.getElementsByClassName(""active"");
                current[0].className = current[0].className.replace("" active"", """");
                this.className += "" active"";
            });
        }
    </script>

 ");
            WriteLiteral("   ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "283658b2bc1d93aa20bb2c93ee14e4519123817717732", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n   ");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
